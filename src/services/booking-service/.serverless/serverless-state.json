{
  "service": {
    "service": "booking-service",
    "serviceObject": {
      "name": "booking-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "ap-south-1",
      "httpApi": {
        "id": "fxh1zg6455"
      },
      "environment": {
        "DATABASE_URL": "postgresql://backendapp:backend123@salonapp.cheme8w42ux8.ap-south-1.rds.amazonaws.com/salondb",
        "FIREBASE_SECRET_NAME": "FirebaseSDK",
        "FIREBASE_WEB_API_KEY": "/firebase/firebase-web/api/key",
        "CUSTOM_AWS_REGION": "ap-south-1",
        "DYNAMODB_BOOKINGS_TABLE": "BookingsTable"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "ssm:GetParameter",
                "ssm:GetParameters"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/FirebaseSDK"
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/IdempotencyTable"
                },
                {
                  "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BookingsTable"
                },
                {
                  "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BookingsTable/index/*"
                }
              ]
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CreateBookingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/booking-service-dev-createBooking"
            }
          },
          "ConfirmBookingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/booking-service-dev-confirmBooking"
            }
          },
          "CancelBookingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/booking-service-dev-cancelBooking"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "booking-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/booking-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/booking-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "booking-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateBookingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-south-1-cb00259d-5c2e",
                "S3Key": "serverless/booking-service/dev/1757502714923-2025-09-10T11:11:54.923Z/createBooking.zip"
              },
              "Handler": "src/handlers/createBookingHandler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "booking-service-dev-createBooking",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://backendapp:backend123@salonapp.cheme8w42ux8.ap-south-1.rds.amazonaws.com/salondb",
                  "FIREBASE_SECRET_NAME": "FirebaseSDK",
                  "FIREBASE_WEB_API_KEY": "/firebase/firebase-web/api/key",
                  "CUSTOM_AWS_REGION": "ap-south-1",
                  "DYNAMODB_BOOKINGS_TABLE": "BookingsTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateBookingLogGroup"
            ]
          },
          "ConfirmBookingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-south-1-cb00259d-5c2e",
                "S3Key": "serverless/booking-service/dev/1757502714923-2025-09-10T11:11:54.923Z/confirmBooking.zip"
              },
              "Handler": "src/handlers/confirmBookingHandler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "booking-service-dev-confirmBooking",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://backendapp:backend123@salonapp.cheme8w42ux8.ap-south-1.rds.amazonaws.com/salondb",
                  "FIREBASE_SECRET_NAME": "FirebaseSDK",
                  "FIREBASE_WEB_API_KEY": "/firebase/firebase-web/api/key",
                  "CUSTOM_AWS_REGION": "ap-south-1",
                  "DYNAMODB_BOOKINGS_TABLE": "BookingsTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ConfirmBookingLogGroup"
            ]
          },
          "CancelBookingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-ap-south-1-cb00259d-5c2e",
                "S3Key": "serverless/booking-service/dev/1757502714923-2025-09-10T11:11:54.923Z/cancelBooking.zip"
              },
              "Handler": "src/handlers/cancelBookingHandler.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "booking-service-dev-cancelBooking",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://backendapp:backend123@salonapp.cheme8w42ux8.ap-south-1.rds.amazonaws.com/salondb",
                  "FIREBASE_SECRET_NAME": "FirebaseSDK",
                  "FIREBASE_WEB_API_KEY": "/firebase/firebase-web/api/key",
                  "CUSTOM_AWS_REGION": "ap-south-1",
                  "DYNAMODB_BOOKINGS_TABLE": "BookingsTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CancelBookingLogGroup"
            ]
          },
          "CancelBookingLambdaVersionCAaRts4D07D5pE7YoaP7XjigmDBKMh20a7C5Q7AU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CancelBookingLambdaFunction"
              },
              "CodeSha256": "k/6VlozHJenPEr63r4RxijPByGUuUhxW8viYBH4RUps="
            }
          },
          "CreateBookingLambdaVersionoYgAxSIywNhq3htSOBbukFGpXBIBvhJAOth75JgqypM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateBookingLambdaFunction"
              },
              "CodeSha256": "K2iH83YT1veR3CKZ9h8dM6HiBJMxO2OsOPtJWNABzoI="
            }
          },
          "ConfirmBookingLambdaVersionU94J36c3DEdGaSQcpHD8BtfpJPgY4nscyIm5HlgPVU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ConfirmBookingLambdaFunction"
              },
              "CodeSha256": "4vP5sHN7/ZpxZq2VNhwOaBAe6S/xeWbDVUxdIq4qaDs="
            }
          },
          "CreateBookingLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateBookingLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "fxh1zg6455",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateBooking": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "fxh1zg6455",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateBookingLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostBookings": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "fxh1zg6455",
              "RouteKey": "POST /bookings",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateBooking"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateBooking"
          },
          "ConfirmBookingLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ConfirmBookingLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "fxh1zg6455",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationConfirmBooking": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "fxh1zg6455",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ConfirmBookingLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostBookingsIdVarConfirm": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "fxh1zg6455",
              "RouteKey": "POST /bookings/{id}/confirm",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationConfirmBooking"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationConfirmBooking"
          },
          "CancelBookingLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CancelBookingLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    "fxh1zg6455",
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCancelBooking": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": "fxh1zg6455",
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CancelBookingLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostBookingsIdVarCancel": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": "fxh1zg6455",
              "RouteKey": "POST /bookings/{id}/cancel",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCancelBooking"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCancelBooking"
          },
          "BookingsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "BookingsTable",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "locationId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "startTime",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "LocationTimeIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "locationId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "startTime",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "StreamSpecification": {
                "StreamViewType": "NEW_AND_OLD_IMAGES"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-ap-south-1-cb00259d-5c2e",
            "Export": {
              "Name": "sls-booking-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "CancelBookingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CancelBookingLambdaVersionCAaRts4D07D5pE7YoaP7XjigmDBKMh20a7C5Q7AU"
            },
            "Export": {
              "Name": "sls-booking-service-dev-CancelBookingLambdaFunctionQualifiedArn"
            }
          },
          "CreateBookingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateBookingLambdaVersionoYgAxSIywNhq3htSOBbukFGpXBIBvhJAOth75JgqypM"
            },
            "Export": {
              "Name": "sls-booking-service-dev-CreateBookingLambdaFunctionQualifiedArn"
            }
          },
          "ConfirmBookingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ConfirmBookingLambdaVersionU94J36c3DEdGaSQcpHD8BtfpJPgY4nscyIm5HlgPVU"
            },
            "Export": {
              "Name": "sls-booking-service-dev-ConfirmBookingLambdaFunctionQualifiedArn"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "webpack": {
        "webpackConfig": "webpack.config.js",
        "includeModules": true,
        "packager": "yarn",
        "keepOutputDirectory": true
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-offline",
      "serverless-dotenv-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "createBooking": {
        "handler": "src/handlers/createBookingHandler.handler",
        "events": [
          {
            "httpApi": {
              "path": "/bookings",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/bookings"
          }
        ],
        "name": "booking-service-dev-createBooking",
        "package": {
          "artifact": ".serverless\\createBooking.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateBookingLambdaVersionoYgAxSIywNhq3htSOBbukFGpXBIBvhJAOth75JgqypM"
      },
      "confirmBooking": {
        "handler": "src/handlers/confirmBookingHandler.handler",
        "events": [
          {
            "httpApi": {
              "path": "/bookings/{id}/confirm",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/bookings/{id}/confirm"
          }
        ],
        "name": "booking-service-dev-confirmBooking",
        "package": {
          "artifact": ".serverless\\confirmBooking.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ConfirmBookingLambdaVersionU94J36c3DEdGaSQcpHD8BtfpJPgY4nscyIm5HlgPVU"
      },
      "cancelBooking": {
        "handler": "src/handlers/cancelBookingHandler.handler",
        "events": [
          {
            "httpApi": {
              "path": "/bookings/{id}/cancel",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/bookings/{id}/cancel"
          }
        ],
        "name": "booking-service-dev-cancelBooking",
        "package": {
          "artifact": ".serverless\\cancelBooking.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CancelBookingLambdaVersionCAaRts4D07D5pE7YoaP7XjigmDBKMh20a7C5Q7AU"
      }
    },
    "resources": {
      "Resources": {
        "BookingsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "BookingsTable",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "locationId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "startTime",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "LocationTimeIndex",
                "KeySchema": [
                  {
                    "AttributeName": "locationId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "startTime",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "StreamSpecification": {
              "StreamViewType": "NEW_AND_OLD_IMAGES"
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "service": "booking-service",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "useDotenv": true,
      "build": {
        "esbuild": false
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "individually": true,
        "patterns": [
          "!../../../node_modules/**",
          "../../../libs/generated/client/**",
          "../../../node_modules/@prisma/client/**",
          "../../../node_modules/.prisma/client/**",
          "../../../node_modules/@prisma/engines/libquery_engine-*.so.node",
          "../../../node_modules/.prisma/client/libquery_engine-*.so.node"
        ],
        "artifactsS3KeyDirname": "serverless/booking-service/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-ap-south-1-cb00259d-5c2e",
        "artifactDirectoryName": "serverless/booking-service/dev/1757502714923-2025-09-10T11:11:54.923Z"
      }
    },
    "appId": null,
    "orgId": null,
    "build": {
      "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"build\"]"
    },
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/booking-service/dev/1757502714923-2025-09-10T11:11:54.923Z",
    "artifact": ""
  }
}