service: services-list


provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:CUSTOM_AWS_REGION}
  httpApi:
    id: ${file(serverless-id.json):http_api_id}
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    FIREBASE_SECRET_NAME: ${env:FIREBASE_SECRET_NAME}
    FIREBASE_WEB_API_KEY: ${env:FIREBASE_WEB_API_KEY}
    CUSTOM_AWS_REGION: ${env:CUSTOM_AWS_REGION}
    # LOG_LEVEL: ${env:LOG_LEVEL, 'info'}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
          Resource:
            - Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${env:FIREBASE_SECRET_NAME}
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/IdempotencyTable

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: false
    packager: 'yarn'
    keepOutputDirectory: true
    individually: true
    excludeFiles: src/**/*.test.js

useDotenv: true


functions:
  getServices:
    handler: src/handlers/getServicesHandler.handler
    events:
      - httpApi:
          path: /services
          method: get

package:
  patterns:
    - '!node_modules/**'
    - '!../../../node_modules/**'
    - '../../../libs/generated/client/**'
    - '../../../libs/generated/client/query_engine-*'
    - '../../../libs/generated/client/libquery_engine-*'
    - '!../../../node_modules/@prisma/engines/**'